/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestionnotes;


import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Query;
import java.util.List;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.awt.Color;

import com.formdev.flatlaf.FlatDarkLaf;
import static gestionnotes.AddUser.validateEmail;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.table.AbstractTableModel;
import javax.swing.text.AbstractDocument;



/**
 *
 * @author HP
 */
public class EtudiantForm extends javax.swing.JFrame {

    /**
     * Creates new form EtudiantForm
     */
    
    private int idSelectedLigne;
    
    public EtudiantForm() {
        initComponents();
        
        AfficherTable();
        SelectionnerLigne();
        Recherche();
        
        List<Filiere> filieres = retourneFilieres();
        List<Promotion>promotions = retournePromotions();
        
        for( Filiere filiere : filieres) {
            EtudiantFiliereComboBox.addItem(filiere.getNomFiliere());
        }
        
        for( Promotion promotion : promotions) {
            EtudiantPromotionComboBox.addItem(promotion.getAnnee());
        }
        
        ((AbstractDocument) ageField.getDocument()).setDocumentFilter(new NumericFilter());
        ((AbstractDocument) ageField.getDocument()).setDocumentFilter(new TwoDigitFilter());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EtuFormPanel = new javax.swing.JPanel();
        emailField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        ageField = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        lastnameLabel = new javax.swing.JLabel();
        firstnameLabel = new javax.swing.JLabel();
        matriculeLabel = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        ageLabel = new javax.swing.JLabel();
        sexeLabel = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        sexeField = new javax.swing.JComboBox<>();
        lastnameField = new javax.swing.JTextField();
        firstnameField = new javax.swing.JTextField();
        deleteBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        sexeLabel1 = new javax.swing.JLabel();
        EtudiantFiliereComboBox = new javax.swing.JComboBox<>();
        jSeparator7 = new javax.swing.JSeparator();
        sexeLabel2 = new javax.swing.JLabel();
        EtudiantPromotionComboBox = new javax.swing.JComboBox<>();
        jSeparator8 = new javax.swing.JSeparator();
        HomeBtn = new javax.swing.JLabel();
        EtuTablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        EtuTable = new javax.swing.JTable();
        searchField = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        rechercheLabel = new javax.swing.JLabel();
        MinimiseBtn = new javax.swing.JButton();
        CloseBtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(45, 50, 80));
        setLocation(new java.awt.Point(300, 190));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        EtuFormPanel.setBackground(new java.awt.Color(45, 50, 80));
        EtuFormPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        emailField.setBackground(new java.awt.Color(45, 50, 80));
        emailField.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        emailField.setForeground(new java.awt.Color(255, 255, 255));
        emailField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        emailField.setCaretColor(new java.awt.Color(255, 255, 255));
        EtuFormPanel.add(emailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 350, 40));

        jSeparator1.setBackground(new java.awt.Color(249, 177, 122));
        jSeparator1.setForeground(new java.awt.Color(249, 177, 122));
        EtuFormPanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 350, 10));

        jSeparator2.setBackground(new java.awt.Color(249, 177, 122));
        jSeparator2.setForeground(new java.awt.Color(249, 177, 122));
        EtuFormPanel.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 350, -1));

        ageField.setBackground(new java.awt.Color(45, 50, 80));
        ageField.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        ageField.setForeground(new java.awt.Color(255, 255, 255));
        ageField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ageField.setCaretColor(new java.awt.Color(255, 255, 255));
        EtuFormPanel.add(ageField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 350, 40));

        jSeparator3.setBackground(new java.awt.Color(249, 177, 122));
        jSeparator3.setForeground(new java.awt.Color(249, 177, 122));
        EtuFormPanel.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 350, -1));

        lastnameLabel.setBackground(new java.awt.Color(249, 177, 122));
        lastnameLabel.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        lastnameLabel.setForeground(new java.awt.Color(249, 177, 122));
        lastnameLabel.setText("Nom");
        EtuFormPanel.add(lastnameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));

        firstnameLabel.setBackground(new java.awt.Color(249, 177, 122));
        firstnameLabel.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        firstnameLabel.setForeground(new java.awt.Color(249, 177, 122));
        firstnameLabel.setText("Prenom");
        EtuFormPanel.add(firstnameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, -1));

        matriculeLabel.setBackground(new java.awt.Color(249, 177, 122));
        matriculeLabel.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        matriculeLabel.setForeground(new java.awt.Color(249, 177, 122));
        matriculeLabel.setText("Email");
        EtuFormPanel.add(matriculeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        addBtn.setBackground(new java.awt.Color(51, 51, 255));
        addBtn.setFont(new java.awt.Font("Candara", 1, 18)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("ADD");
        addBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        EtuFormPanel.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 660, 90, 30));

        jSeparator4.setBackground(new java.awt.Color(249, 177, 122));
        jSeparator4.setForeground(new java.awt.Color(249, 177, 122));
        EtuFormPanel.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 350, -1));

        ageLabel.setBackground(new java.awt.Color(249, 177, 122));
        ageLabel.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        ageLabel.setForeground(new java.awt.Color(249, 177, 122));
        ageLabel.setText("Age");
        EtuFormPanel.add(ageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, -1, -1));

        sexeLabel.setBackground(new java.awt.Color(249, 177, 122));
        sexeLabel.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        sexeLabel.setForeground(new java.awt.Color(249, 177, 122));
        sexeLabel.setText("Sexe");
        EtuFormPanel.add(sexeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, -1, -1));

        jSeparator5.setBackground(new java.awt.Color(249, 177, 122));
        jSeparator5.setForeground(new java.awt.Color(249, 177, 122));
        EtuFormPanel.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, 350, -1));

        sexeField.setBackground(new java.awt.Color(45, 50, 80));
        sexeField.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        sexeField.setForeground(new java.awt.Color(255, 255, 255));
        sexeField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculin", "FÃ©minin", "Autre" }));
        sexeField.setBorder(null);
        EtuFormPanel.add(sexeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, 350, 50));

        lastnameField.setBackground(new java.awt.Color(45, 50, 80));
        lastnameField.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        lastnameField.setForeground(new java.awt.Color(255, 255, 255));
        lastnameField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        lastnameField.setCaretColor(new java.awt.Color(255, 255, 255));
        EtuFormPanel.add(lastnameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 350, 40));

        firstnameField.setBackground(new java.awt.Color(45, 50, 80));
        firstnameField.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        firstnameField.setForeground(new java.awt.Color(255, 255, 255));
        firstnameField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        firstnameField.setCaretColor(new java.awt.Color(255, 255, 255));
        EtuFormPanel.add(firstnameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 350, 40));

        deleteBtn.setBackground(new java.awt.Color(255, 102, 102));
        deleteBtn.setFont(new java.awt.Font("Candara", 1, 18)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("DELETE");
        deleteBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        EtuFormPanel.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 660, 90, 30));

        editBtn.setBackground(new java.awt.Color(255, 204, 0));
        editBtn.setFont(new java.awt.Font("Candara", 1, 18)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setText("EDIT");
        editBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        EtuFormPanel.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 660, 90, 30));

        titleLabel.setBackground(new java.awt.Color(249, 177, 122));
        titleLabel.setFont(new java.awt.Font("Candara", 1, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(249, 177, 122));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Gestion des Etudiants");
        EtuFormPanel.add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        sexeLabel1.setBackground(new java.awt.Color(249, 177, 122));
        sexeLabel1.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        sexeLabel1.setForeground(new java.awt.Color(249, 177, 122));
        sexeLabel1.setText("Filiere");
        EtuFormPanel.add(sexeLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 490, -1, -1));

        EtudiantFiliereComboBox.setBackground(new java.awt.Color(45, 50, 80));
        EtudiantFiliereComboBox.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        EtudiantFiliereComboBox.setForeground(new java.awt.Color(255, 255, 255));
        EtudiantFiliereComboBox.setBorder(null);
        EtuFormPanel.add(EtudiantFiliereComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 510, 350, 50));

        jSeparator7.setBackground(new java.awt.Color(249, 177, 122));
        jSeparator7.setForeground(new java.awt.Color(249, 177, 122));
        EtuFormPanel.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 560, 350, -1));

        sexeLabel2.setBackground(new java.awt.Color(249, 177, 122));
        sexeLabel2.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        sexeLabel2.setForeground(new java.awt.Color(249, 177, 122));
        sexeLabel2.setText("Promotion");
        EtuFormPanel.add(sexeLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 570, -1, -1));

        EtudiantPromotionComboBox.setBackground(new java.awt.Color(45, 50, 80));
        EtudiantPromotionComboBox.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        EtudiantPromotionComboBox.setForeground(new java.awt.Color(255, 255, 255));
        EtudiantPromotionComboBox.setBorder(null);
        EtuFormPanel.add(EtudiantPromotionComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 590, 350, 50));

        jSeparator8.setBackground(new java.awt.Color(249, 177, 122));
        jSeparator8.setForeground(new java.awt.Color(249, 177, 122));
        EtuFormPanel.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 640, 350, -1));

        HomeBtn.setForeground(new java.awt.Color(249, 177, 122));
        HomeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionnotes/home.png"))); // NOI18N
        HomeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeBtnMouseClicked(evt);
            }
        });
        EtuFormPanel.add(HomeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(EtuFormPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 700));

        EtuTablePanel.setBackground(new java.awt.Color(66, 71, 105));
        EtuTablePanel.setForeground(new java.awt.Color(255, 255, 255));
        EtuTablePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(66, 71, 105));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        EtuTable.setBackground(new java.awt.Color(66, 71, 105));
        EtuTable.setFont(new java.awt.Font("Candara", 0, 15)); // NOI18N
        EtuTable.setForeground(new java.awt.Color(255, 255, 255));
        EtuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        EtuTable.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(EtuTable);

        EtuTablePanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 830, 580));

        searchField.setBackground(new java.awt.Color(66, 71, 105));
        searchField.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        searchField.setForeground(new java.awt.Color(255, 255, 255));
        searchField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        searchField.setCaretColor(new java.awt.Color(255, 255, 255));
        EtuTablePanel.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 300, 40));

        jSeparator6.setBackground(new java.awt.Color(249, 177, 122));
        jSeparator6.setForeground(new java.awt.Color(249, 177, 122));
        EtuTablePanel.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 300, 20));

        rechercheLabel.setBackground(new java.awt.Color(249, 177, 122));
        rechercheLabel.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        rechercheLabel.setForeground(new java.awt.Color(249, 177, 122));
        rechercheLabel.setText("Rechercher");
        EtuTablePanel.add(rechercheLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, -1, -1));

        MinimiseBtn.setBackground(new java.awt.Color(66, 71, 105));
        MinimiseBtn.setFont(new java.awt.Font("Candara", 1, 36)); // NOI18N
        MinimiseBtn.setForeground(new java.awt.Color(249, 177, 122));
        MinimiseBtn.setText("-");
        MinimiseBtn.setToolTipText("");
        MinimiseBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 71, 105), 0));
        MinimiseBtn.setBorderPainted(false);
        MinimiseBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimiseBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MinimiseBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MinimiseBtnMouseExited(evt);
            }
        });
        MinimiseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinimiseBtnActionPerformed(evt);
            }
        });
        EtuTablePanel.add(MinimiseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 0, 50, 40));

        CloseBtn1.setBackground(new java.awt.Color(66, 71, 105));
        CloseBtn1.setFont(new java.awt.Font("Candara", 1, 36)); // NOI18N
        CloseBtn1.setForeground(new java.awt.Color(249, 177, 122));
        CloseBtn1.setText("x");
        CloseBtn1.setToolTipText("");
        CloseBtn1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 71, 105), 0));
        CloseBtn1.setBorderPainted(false);
        CloseBtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CloseBtn1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CloseBtn1MouseExited(evt);
            }
        });
        CloseBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseBtn1ActionPerformed(evt);
            }
        });
        EtuTablePanel.add(CloseBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 0, 50, 40));

        getContentPane().add(EtuTablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 830, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        
        String email = emailField.getText();
        String nom = lastnameField.getText();
        String prenom = firstnameField.getText();
        int age = 0;
        if (!"".equals(ageField.getText())) {
            age = Integer.parseInt(ageField.getText());
        }
        String sexe = sexeField.getSelectedItem().toString();
        String filiereName = EtudiantFiliereComboBox.getSelectedItem().toString();
        String promotionAnnee = EtudiantPromotionComboBox.getSelectedItem().toString();
        
        if ("".equals(email) || "".equals(nom) || "".equals(prenom) || "".equals(sexe)) {
            JOptionPane.showMessageDialog(this, "Viellez remplir tous les champs");
        }
        
        
        if (validateEmail(email)) {
            System.out.println("Adresse e-mail valide.");
            
            Filiere filiere = retourneFiliereByName(filiereName);
            Promotion promo = retournePromotionByAnnee(promotionAnnee);

            Etudiant etudiant = new Etudiant();

            etudiant.setEmailEtudiant(email);
            etudiant.setNomEtudiant(nom);
            etudiant.setPrenomEtudiant(prenom);
            etudiant.setAgeEtudiant(age);
            etudiant.setSexeEtudiant(sexe);
            etudiant.setFiliereId(filiere);
            etudiant.setPromotionId(promo);

            enregistrerEtudiant(etudiant);
            AfficherTable();
            ResetForm();
        } else {
            System.out.println("Adresse e-mail invalide.");
            JOptionPane.showMessageDialog(this, "Adresse e-mail invalide.");
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        
        String email = emailField.getText();
        String nom = lastnameField.getText();
        String prenom = firstnameField.getText();
        int age = Integer.parseInt(ageField.getText());
        String sexe = sexeField.getSelectedItem().toString();
        String filiereName = EtudiantFiliereComboBox.getSelectedItem().toString();
        String promotionAnnee = EtudiantPromotionComboBox.getSelectedItem().toString();
        
        
        if (validateEmail(email)) {
            System.out.println("Adresse e-mail valide.");
            
            Filiere filiere = retourneFiliereByName(filiereName);
            Promotion promo = retournePromotionByAnnee(promotionAnnee);

            int etudiantToBeModifiedId = getIdSelected();

            Etudiant etudiant = retourneEtudiant(etudiantToBeModifiedId);

            etudiant.setEmailEtudiant(email);
            etudiant.setNomEtudiant(nom);
            etudiant.setPrenomEtudiant(prenom);
            etudiant.setAgeEtudiant(age);
            etudiant.setSexeEtudiant(sexe);
            etudiant.setFiliereId(filiere);
            etudiant.setPromotionId(promo);

            UpdateEtudiant(etudiant);
            ResetForm();
            AfficherTable();
            
        } else {
            System.out.println("Adresse e-mail invalide.");
            JOptionPane.showMessageDialog(this, "Adresse e-mail invalide.");
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        int etudiantToBeModifiedId = getIdSelected();

        Etudiant etudiant = retourneEtudiant(etudiantToBeModifiedId);
        
        DeleteEtudiant(etudiant);
        
        ResetForm();

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void MinimiseBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimiseBtnMouseEntered
        // TODO add your handling code here:
        MinimiseBtn.setBackground(new Color(249,177,122));
        MinimiseBtn.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_MinimiseBtnMouseEntered

    private void MinimiseBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimiseBtnMouseExited
        // TODO add your handling code here:
        MinimiseBtn.setBackground(new Color(66,71,105));
        MinimiseBtn.setForeground(new Color(249,177,122));
    }//GEN-LAST:event_MinimiseBtnMouseExited

    private void MinimiseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinimiseBtnActionPerformed
        // TODO add your handling code here:
        this.setState(Frame.ICONIFIED);

    }//GEN-LAST:event_MinimiseBtnActionPerformed

    private void HomeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeBtnMouseClicked
        // TODO add your handling code here:
        new HomePage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_HomeBtnMouseClicked

    private void CloseBtn1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseBtn1MouseEntered
        // TODO add your handling code here:
        CloseBtn1.setBackground(new Color(249,177,122));
        CloseBtn1.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_CloseBtn1MouseEntered

    private void CloseBtn1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseBtn1MouseExited
        // TODO add your handling code here:
        CloseBtn1.setBackground(new Color(66,71,105));
        CloseBtn1.setForeground(new Color(249,177,122));
    }//GEN-LAST:event_CloseBtn1MouseExited

    private void CloseBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseBtn1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_CloseBtn1ActionPerformed

    private void MinimiseBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimiseBtnMouseClicked
        // TODO add your handling code here:
//        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_MinimiseBtnMouseClicked

    
    private void AfficherTable() {        
        List<Etudiant> etudiants = retourneEtudiants();   
        
        int count = etudiants.size();
//        DefaultTableModel model = new DefaultTableModel();
//        model.addColumn("NÂ°");
//        model.addColumn("Nom ");
//	model.addColumn("Prenom ");
//	model.addColumn("Email ");
//	model.addColumn("Sexe ");
//	model.addColumn("Age ");
//        model.addColumn("FiliÃ¨re");
//        model.addColumn("Promotion");
        
        String[] columns = {"NÂ°", "Nom", "Prenom", "Email", "Sexe", "Age", "FiliÃ¨re", "Promotion"};

        String[][] donnees = new String[count][columns.length];

        int j = 0;
        
        for (Etudiant etudiant : etudiants){
            
            Filiere filiereCorrespondante = retourneFiliere(etudiant.getFiliereId().getIdFiliere());
            Promotion promotionCorrespondante = retournePromotion(etudiant.getPromotionId().getIdPromotion());
            
                donnees[j][0] = etudiant.getIdEtudiant().toString();
                donnees[j][1] = etudiant.getNomEtudiant();
                donnees[j][2] = etudiant.getPrenomEtudiant();
                donnees[j][3] = etudiant.getEmailEtudiant();
                donnees[j][4] = etudiant.getSexeEtudiant();
                donnees[j][5] = String.valueOf(etudiant.getAgeEtudiant());
                donnees[j][6] = filiereCorrespondante.getNomFiliere();
                donnees[j][7] = promotionCorrespondante.getAnnee();
                j++;
//            Object[] rowData = {etudiant.getIdEtudiant(), etudiant.getNomEtudiant(), etudiant.getPrenomEtudiant(), etudiant.getEmailEtudiant(), etudiant.getSexeEtudiant(), etudiant.getAgeEtudiant(), filiereCorrespondante.getNomFiliere(), promotionCorrespondante.getAnnee()};
//            model.addRow(rowData);
        }
        
        DefaultTableModel model = new DefaultTableModel(donnees, columns);
        
        EtuTable.setModel(model);

        // RafraÃ®chir la table aprÃ¨s avoir dÃ©fini le nouveau modÃ¨le
        ((DefaultTableModel) EtuTable.getModel()).fireTableDataChanged();
    }
    
    private void SelectionnerLigne() {
        EtuTable.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = EtuTable.getSelectedRow();

                System.out.println(selectedRow);
                if (selectedRow != -1) {
                    // RÃ©cupÃ©rer les Ã©lÃ©ments de la ligne sÃ©lectionnÃ©e
                    int id = Integer.parseInt(EtuTable.getValueAt(selectedRow, 0).toString());
                    String email = EtuTable.getValueAt(selectedRow, 3).toString();
                    String lastname = EtuTable.getValueAt(selectedRow, 1).toString();
                    String firstname = EtuTable.getValueAt(selectedRow, 2).toString();
                    String age = EtuTable.getValueAt(selectedRow, 5).toString();
                    String sexe = EtuTable.getValueAt(selectedRow, 4).toString();
                    String filiere = EtuTable.getValueAt(selectedRow, 6).toString();
                    String promotion = EtuTable.getValueAt(selectedRow, 7).toString();


                    int sexeIndex;

                    if (null == sexe){
                        sexeIndex = 2;
                    }else switch (sexe) {
                        case "Masculin":
                            sexeIndex = 0;
                            break;
                        case "FÃ©minin":
                            sexeIndex = 1;
                            break;
                        default:
                            sexeIndex = 2;
                            break;
                    }


                    // Afficher les Ã©lÃ©ments rÃ©cupÃ©rÃ©s dans le formulaire

                    //JOptionPane.showMessageDialog(null, "ID: " + id + "\nNom: " + nom + "\nAge: " + age);

                    emailField.setText(email);
                    lastnameField.setText(lastname);
                    firstnameField.setText(firstname);
                    ageField.setText(age);
                    sexeField.setSelectedIndex(sexeIndex);
                    EtudiantFiliereComboBox.setSelectedItem(filiere);
                    EtudiantPromotionComboBox.setSelectedItem(promotion);
                    
                    idSelectedLigne = id;
                }
            }
        });   
    }
    
    public int getIdSelected() {
        return idSelectedLigne;
    }
    
    public void ResetForm() {
        emailField.setText("");
        lastnameField.setText("");
        firstnameField.setText("");
        ageField.setText("");
        sexeField.setSelectedIndex(0);
    }
    
    
    private void Recherche() {
        TableRowSorter<TableModel> sort = new TableRowSorter<>(EtuTable.getModel());
        EtuTable.setRowSorter(sort);
        
        searchField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                String str = searchField.getText();
                if (str.trim().length() == 0) {
                    sort.setRowFilter(null);
                } else {
                    // Ãchappez les caractÃ¨res spÃ©ciaux dans la chaÃ®ne de recherche
                    String escapedStr = java.util.regex.Pattern.quote(str);
                    sort.setRowFilter(RowFilter.regexFilter("(?i)" + escapedStr));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String str = searchField.getText();
                if (str.trim().length() == 0) {
                    sort.setRowFilter(null);
                } else {
                    // Ãchappez les caractÃ¨res spÃ©ciaux dans la chaÃ®ne de recherche
                    String escapedStr = java.util.regex.Pattern.quote(str);
                    sort.setRowFilter(RowFilter.regexFilter("(?i)" + escapedStr));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                
            }
        
        });
    }
    
    public static boolean validateEmail(String email) {
        String regex = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }
    
    
    /**
     * ReprÃ©sente l'entity manager factory (unitÃ© de persistance)
     */
    private final EntityManagerFactory emf = javax.persistence.Persistence.createEntityManagerFactory("GestionNotesPU");
    /**
     * ReprÃ©sente l'entity manager pour effectuer les opÃ©rations sur les bases
     * de donnÃ©es
     */
    private final EntityManager entitymanager = emf.createEntityManager();
	
    /**
     * Retourne la liste des Ã©tudiants
     * @return liste des etudiants
     */
    public List<Etudiant> retourneEtudiants() {
       
        //Query jpql = entitymanager.createQuery("SELECT e FROM Etudiant e");
        Query jpql = entitymanager.createNamedQuery("Etudiant.findAll");

        return jpql.getResultList();
    }
    
    /**
     * Retourne l'Ã©tudiant
     * @param id
     * @return
     */
    public Etudiant retourneEtudiant(int id) {
        //try {
            // Utilisation de la requÃªte nommÃ©e "Etudiant.findById"
            Query query = entitymanager.createNamedQuery("Etudiant.findById");
            query.setParameter("id", id);

            // ExÃ©cution de la requÃªte
            return (Etudiant) query.getSingleResult();
        /*} finally {
            entitymanager.close();
        }*/
    }
    
    /**
     * Retourne la liste des Departements
     * @return liste des Departements
     */
    private List<Filiere> retourneFilieres() {
        //Query jpql = entitymanager.createQuery("SELECT e FROM Departement e");
        Query jpql = entitymanager.createNamedQuery("Filiere.findAll");

        return jpql.getResultList();
    }
    
    /**
     * Retourne le departement
     * @param id
     * @return
     */
    public Filiere retourneFiliere(int id) {
            // Utilisation de la requÃªte nommÃ©e "Departement.findById"
            Query query = entitymanager.createNamedQuery("Filiere.findByIdFiliere");
            query.setParameter("idFiliere", id);

            // ExÃ©cution de la requÃªte
            return (Filiere) query.getSingleResult();
    }
    
    /**
     * Retourne le departement
     * @param nom
     * @return
     */
    public Filiere retourneFiliereByName(String nom) {
            // Utilisation de la requÃªte nommÃ©e "Departement.findById"
            Query query = entitymanager.createNamedQuery("Filiere.findByNomFiliere");
            query.setParameter("nomFiliere", nom);

            // ExÃ©cution de la requÃªte
            return (Filiere) query.getSingleResult();
    }
    
    /**
     * Retourne la liste des Formations
     * @return liste des formation
     */
    private List<Promotion> retournePromotions() {
        Query jpql = entitymanager.createNamedQuery("Promotion.findAll");

        return jpql.getResultList();
    }

    /**
     * Retourne la filiere
     * @param id
     * @return
     */
    public Promotion retournePromotion(int id) {
        // Utilisation de la requÃªte nommÃ©e "Promotion.findById"
        Query query = entitymanager.createNamedQuery("Promotion.findByIdPromotion");
        query.setParameter("idPromotion", id);

        // ExÃ©cution de la requÃªte
        return (Promotion) query.getSingleResult();
    }
    
    /**
     * Retourne la filiere
     * @param annee
     * @return
     */
    public Promotion retournePromotionByAnnee(String annee) {
        Query query = entitymanager.createNamedQuery("Promotion.findByAnnee");
        query.setParameter("annee", annee);
        
        return (Promotion) query.getSingleResult();
    }
    
    

    /**
     * EnrÃ©gistrer un Ã©tudiant
     *
     * @param etudiant
     */
    public void enregistrerEtudiant(Etudiant etudiant) {
        entitymanager.getTransaction().begin();
        entitymanager.persist(etudiant);
        entitymanager.getTransaction().commit();
      
    }
    
    public void UpdateEtudiant(Etudiant etudiant) {
        entitymanager.getTransaction().begin();
        entitymanager.merge(etudiant);
        entitymanager.getTransaction().commit();
    }
    
    public void DeleteEtudiant(Etudiant etudiant) {
        entitymanager.getTransaction().begin();
        entitymanager.remove(etudiant);
        entitymanager.getTransaction().commit();
    }
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EtudiantForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EtudiantForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EtudiantForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EtudiantForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(new FlatDarkLaf());
                } catch (UnsupportedLookAndFeelException e) {
                    e.printStackTrace();
                }
                
                new EtudiantForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseBtn1;
    private javax.swing.JPanel EtuFormPanel;
    private javax.swing.JTable EtuTable;
    private javax.swing.JPanel EtuTablePanel;
    private javax.swing.JComboBox<String> EtudiantFiliereComboBox;
    private javax.swing.JComboBox<String> EtudiantPromotionComboBox;
    private javax.swing.JLabel HomeBtn;
    private javax.swing.JButton MinimiseBtn;
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField ageField;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField firstnameField;
    private javax.swing.JLabel firstnameLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTextField lastnameField;
    private javax.swing.JLabel lastnameLabel;
    private javax.swing.JLabel matriculeLabel;
    private javax.swing.JLabel rechercheLabel;
    private javax.swing.JTextField searchField;
    private javax.swing.JComboBox<String> sexeField;
    private javax.swing.JLabel sexeLabel;
    private javax.swing.JLabel sexeLabel1;
    private javax.swing.JLabel sexeLabel2;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
